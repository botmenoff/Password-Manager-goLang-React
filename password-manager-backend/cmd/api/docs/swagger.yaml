definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  models.Notes:
    properties:
      id:
        type: integer
      note_text:
        maxLength: 255
        minLength: 3
        type: string
      user_id:
        type: integer
    required:
    - note_text
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
      username:
        maxLength: 32
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.User:
    properties:
      admin:
        type: boolean
      email:
        type: string
      icon:
        maxLength: 256
        type: string
      id:
        type: integer
      password:
        maxLength: 64
        minLength: 8
        type: string
      username:
        maxLength: 32
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /notes:
    post:
      consumes:
      - application/json
      description: Crea una nueva nota para el usuario logueado
      parameters:
      - description: Datos de la nota (note_text)
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/models.Notes'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Notes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Crear una nota
      tags:
      - notes
  /notes/{id}:
    delete:
      description: Elimina una nota por ID si pertenece al usuario logueado
      parameters:
      - description: ID de la nota
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Eliminar nota
      tags:
      - notes
    get:
      description: Devuelve una nota específica si pertenece al usuario logueado
      parameters:
      - description: ID de la nota
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Notes'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtener nota por ID
      tags:
      - notes
    put:
      consumes:
      - application/json
      description: Actualiza el texto de una nota por ID si pertenece al usuario logueado
      parameters:
      - description: ID de la nota
        in: path
        name: id
        required: true
        type: integer
      - description: Nuevo texto de la nota
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/models.Notes'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Notes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Actualizar nota
      tags:
      - notes
  /notes/my:
    get:
      description: Devuelve las notas del usuario autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Notes'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtener notas del usuario logueado
      tags:
      - notes
  /users:
    get:
      description: Devuelve la lista de usuarios, ocultando la contraseña si no eres
        admin ni el propio usuario
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtener todos los usuarios
      tags:
      - users
  /users/{id}:
    get:
      description: Devuelve un usuario por su ID, oculta la contraseña si no tiene
        permisos
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtener usuario por ID
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Inicia sesión y devuelve token JWT
      parameters:
      - description: Datos de login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login de usuario
      tags:
      - users
  /users/me:
    get:
      description: Devuelve la información del usuario logueado, incluyendo la contraseña
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtener mi información
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Registra un usuario nuevo, hashea la contraseña y asigna un avatar
      parameters:
      - description: Datos del usuario
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Registrar un nuevo usuario
      tags:
      - users
swagger: "2.0"
