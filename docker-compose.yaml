services:
  # MySQL container
  mysql_bp:
    image: mysql:latest
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${BLUEPRINT_DB_DATABASE}
      MYSQL_USER: ${BLUEPRINT_DB_USERNAME}
      MYSQL_PASSWORD: ${BLUEPRINT_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${BLUEPRINT_DB_ROOT_PASSWORD}
    ports:
      - "${BLUEPRINT_DB_PORT}:3306"
    volumes:
      - mysql_volume_bp:/var/lib/mysql

  # Backend container (Go)
  backend:
    build:
      context: ./password-manager-backend
      dockerfile: Dockerfile
    volumes:
      - ./password-manager-backend:/app
      - /app/bin
    ports:
      - "8000:8000"
    depends_on:
      - mysql_bp
    command: make dev-migrate
    environment:
      # ðŸ‘‡ Override de envs para asegurarnos de que usa mysql_bp como host
      BLUEPRINT_DB_HOST: mysql_bp
      BLUEPRINT_DB_PORT: 3306
      BLUEPRINT_DB_DATABASE: ${BLUEPRINT_DB_DATABASE}
      BLUEPRINT_DB_USERNAME: ${BLUEPRINT_DB_USERNAME}
      BLUEPRINT_DB_PASSWORD: ${BLUEPRINT_DB_PASSWORD}

  # Frontend container (React/Node)
  frontend:
    build:
      context: ./password-manager-frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  mysql_volume_bp:
